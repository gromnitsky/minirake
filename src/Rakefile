# Please keep it valid for Rake & minirake simultaneously.

libs = '-lm -ldl -lyaml -lpthread'
include_dirs = '-I ../mruby/mruby/include'
cflags = "-Wall #{include_dirs}"
archive = '../mruby/mruby/build/host/lib/libmruby.a'

mrbc = '../mruby/mruby/bin/mrbc'

obj = FileList['*.c'].ext '.o'
obj.concat ['bytecode.deps.o', 'bytecode.main.o']
rdeps = FileList['ruby/**/*.rb']

# check env
[archive, mrbc].each do |idx|
  unless File.exist? idx
    $stderr.puts "mruby src is missing: #{idx} not found"
    exit 1
  end
end



task :default => 'minirake'

file 'minirake' => obj do |t|
  sh "cc #{cflags} -o #{t.name} #{t.prerequisites.join ' '} #{archive} #{libs}"
end

file 'bytecode.deps.c' => ['deps.rb'] do |t|
  sh "#{mrbc} -g -B bytecode_deps -o #{t.name} #{t.prerequisites[0]}"
end

file 'deps.rb' => rdeps do |t|
  sh "ruby_require_deps ruby/main.rb | ruby_require_cat -o #{t.name}"
end

file 'bytecode.main.c' => ['ruby/main.rb'] do |t|
  sh "#{mrbc} -g -B bytecode_main -o #{t.name} #{t.prerequisites[0]}"
end

rule '.o' => ['.c'] do |t|
  sh "cc #{cflags} #{t.source} -c -o #{t.name}"
end



task :clean do
  sh "rm -f #{obj.join ' '} bytecode.*.c deps.rb minirake"
end

v={};local_variables[0..-2].each{|i|v[i]=eval(i.to_s)};ec07bc v rescue 1
